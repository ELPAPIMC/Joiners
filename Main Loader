-- Isme Joiner Script para Roblox - GUI Mejorada con Server Hop Original
local TweenService = game:GetService("TweenService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")

-- Variables
local player = Players.LocalPlayer
local joinerActive = false
local placeId = game.PlaceId
local attemptCount = 0

-- Lista de usuarios Premium (usa nombres exactos, sensible a mayúsculas)
local premiumUsers = {
    "zWEKITO",
    "raimind7284",
    "pepeelcrak20021"
    -- Agrega más usuarios aquí
}

-- Debug: imprimir nombre del jugador
print("Current User:", player.Name)

-- Verificar si el usuario es premium
local isPremium = false
for _, username in pairs(premiumUsers) do
    if player.Name == username then
        isPremium = true
        break
    end
end

-- Velocidad de búsqueda según edición
local searchDelay = isPremium and 0.5 or 2

-- Colores según edición
local primaryColor = isPremium and Color3.fromRGB(255, 215, 0) or Color3.fromRGB(100, 255, 100)
local secondaryColor = isPremium and Color3.fromRGB(255, 200, 50) or Color3.fromRGB(120, 255, 120)
local accentColor = isPremium and Color3.fromRGB(218, 165, 32) or Color3.fromRGB(80, 200, 80)

-- Crear ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "IsmeJoinerGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Frame principal
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 280, 0, 280)
mainFrame.Position = UDim2.new(0.5, -140, 0.5, -140)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
mainFrame.BorderSizePixel = 0
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.Parent = screenGui

-- Animación de entrada desde el centro
mainFrame.Size = UDim2.new(0, 0, 0, 0)
mainFrame.BackgroundTransparency = 1
local openTween = TweenService:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
    Size = UDim2.new(0, 280, 0, 280),
    BackgroundTransparency = 0
})
openTween:Play()

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 10)
corner.Parent = mainFrame

-- Sombra del frame
local shadow = Instance.new("Frame")
shadow.Name = "Shadow"
shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
shadow.BackgroundTransparency = 0.7
shadow.Position = UDim2.new(0, -5, 0, -5)
shadow.Size = UDim2.new(1, 10, 1, 10)
shadow.ZIndex = 0
shadow.Parent = mainFrame

local shadowCorner = Instance.new("UICorner")
shadowCorner.CornerRadius = UDim.new(0, 10)
shadowCorner.Parent = shadow

-- Stroke animado
local stroke = Instance.new("UIStroke")
stroke.Color = primaryColor
stroke.Thickness = 2
stroke.Parent = mainFrame

local strokeGradient = Instance.new("UIGradient")
if isPremium then
    strokeGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 215, 0)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 200, 50)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(218, 165, 32))
    }
else
    strokeGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(100, 255, 100)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(120, 255, 120)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(80, 200, 80))
    }
end
strokeGradient.Parent = stroke

-- Animación del stroke
spawn(function()
    while wait() do
        for i = 0, 360, 3 do
            strokeGradient.Rotation = i
            wait(0.03)
        end
    end
end)

-- Partículas de fondo animadas
local particlesFrame = Instance.new("Frame")
particlesFrame.Size = UDim2.new(1, 0, 1, 0)
particlesFrame.BackgroundTransparency = 1
particlesFrame.ClipsDescendants = true
particlesFrame.ZIndex = 1
particlesFrame.Parent = mainFrame

-- Crear partículas flotantes
for i = 1, 8 do
    local particle = Instance.new("Frame")
    particle.Size = UDim2.new(0, math.random(2, 4), 0, math.random(2, 4))
    particle.Position = UDim2.new(math.random(), 0, math.random(), 0)
    particle.BackgroundColor3 = primaryColor
    particle.BackgroundTransparency = 0.7
    particle.BorderSizePixel = 0
    particle.ZIndex = 1
    particle.Parent = particlesFrame
    
    local particleCorner = Instance.new("UICorner")
    particleCorner.CornerRadius = UDim.new(1, 0)
    particleCorner.Parent = particle
    
    -- Animación flotante
    spawn(function()
        while wait() do
            local randomX = math.random()
            local randomY = math.random()
            local floatTween = TweenService:Create(particle, TweenInfo.new(math.random(3, 6), Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {
                Position = UDim2.new(randomX, 0, randomY, 0)
            })
            floatTween:Play()
            floatTween.Completed:Wait()
        end
    end)
end

-- Título
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -20, 0, 30)
titleLabel.Position = UDim2.new(0, 10, 0, 5)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Isme Joiner [ALPHA]"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 20
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextTransparency = 1
titleLabel.ZIndex = 2
titleLabel.Parent = mainFrame

-- Fade in del título
TweenService:Create(titleLabel, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0.3), {
    TextTransparency = 0
}):Play()

local textGradient = Instance.new("UIGradient")
if isPremium then
    textGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 215, 0)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 200, 50)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 215, 0))
    }
else
    textGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(100, 255, 100)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(120, 255, 120)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 255, 100))
    }
end
textGradient.Parent = titleLabel

spawn(function()
    while wait() do
        for i = 0, 360, 2 do
            textGradient.Rotation = i
            wait(0.03)
        end
    end
end)

-- Texto de edición
local editionLabel = Instance.new("TextLabel")
editionLabel.Size = UDim2.new(1, -20, 0, 18)
editionLabel.Position = UDim2.new(0, 10, 0, 32)
editionLabel.BackgroundTransparency = 1
editionLabel.Text = isPremium and "Edition: Premium ⚡" or "Edition: FreeMium"
editionLabel.Font = Enum.Font.GothamBold
editionLabel.TextSize = 12
editionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
editionLabel.TextTransparency = 1
editionLabel.ZIndex = 2
editionLabel.Parent = mainFrame

-- Fade in de la edición
TweenService:Create(editionLabel, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0.4), {
    TextTransparency = 0
}):Play()

local editionGradient = Instance.new("UIGradient")
if isPremium then
    editionGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 215, 0)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 200, 50)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 215, 0))
    }
else
    editionGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(100, 255, 100)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(120, 255, 120)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 255, 100))
    }
end
editionGradient.Parent = editionLabel

spawn(function()
    while wait() do
        for i = 0, 360, 2 do
            editionGradient.Rotation = i
            wait(0.03)
        end
    end
end)

-- Toggle Frame
local toggleFrame = Instance.new("Frame")
toggleFrame.Size = UDim2.new(0, 200, 0, 40)
toggleFrame.Position = UDim2.new(0.5, -100, 0, 60)
toggleFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
toggleFrame.BorderSizePixel = 0
toggleFrame.BackgroundTransparency = 1
toggleFrame.ZIndex = 2
toggleFrame.Parent = mainFrame

-- Fade in del toggle frame
TweenService:Create(toggleFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0.5), {
    BackgroundTransparency = 0
}):Play()

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 8)
toggleCorner.Parent = toggleFrame

-- Hover effect para toggle frame
toggleFrame.MouseEnter:Connect(function()
    TweenService:Create(toggleFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
        BackgroundColor3 = Color3.fromRGB(40, 40, 50)
    }):Play()
end)

toggleFrame.MouseLeave:Connect(function()
    TweenService:Create(toggleFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
        BackgroundColor3 = Color3.fromRGB(35, 35, 45)
    }):Play()
end)

local toggleLabel = Instance.new("TextLabel")
toggleLabel.Size = UDim2.new(0, 120, 1, 0)
toggleLabel.Position = UDim2.new(0, 8, 0, 0)
toggleLabel.BackgroundTransparency = 1
toggleLabel.Text = "Auto Server Hop:"
toggleLabel.Font = Enum.Font.Gotham
toggleLabel.TextSize = 14
toggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
toggleLabel.ZIndex = 3
toggleLabel.Parent = toggleFrame

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 55, 0, 26)
toggleButton.Position = UDim2.new(1, -63, 0.5, -13)
toggleButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
toggleButton.BorderSizePixel = 0
toggleButton.Text = "OFF"
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextSize = 12
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.ZIndex = 3
toggleButton.Parent = toggleFrame

local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 6)
buttonCorner.Parent = toggleButton

-- Animación de hover para el botón
toggleButton.MouseEnter:Connect(function()
    TweenService:Create(toggleButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
        Size = UDim2.new(0, 58, 0, 28)
    }):Play()
end)

toggleButton.MouseLeave:Connect(function()
    TweenService:Create(toggleButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
        Size = UDim2.new(0, 55, 0, 26)
    }):Play()
end)

-- Stats Frame
local statsFrame = Instance.new("Frame")
statsFrame.Size = UDim2.new(1, -20, 0, 30)
statsFrame.Position = UDim2.new(0, 10, 0, 105)
statsFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
statsFrame.BorderSizePixel = 0
statsFrame.BackgroundTransparency = 1
statsFrame.ZIndex = 2
statsFrame.Parent = mainFrame

-- Fade in del stats frame
TweenService:Create(statsFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0.6), {
    BackgroundTransparency = 0
}):Play()

local statsCorner = Instance.new("UICorner")
statsCorner.CornerRadius = UDim.new(0, 8)
statsCorner.Parent = statsFrame

local statsLabel = Instance.new("TextLabel")
statsLabel.Size = UDim2.new(1, -10, 1, 0)
statsLabel.Position = UDim2.new(0, 5, 0, 0)
statsLabel.BackgroundTransparency = 1
statsLabel.Text = "Attempts: 0 | Speed: " .. (isPremium and "⚡ Fast" or "Normal")
statsLabel.Font = Enum.Font.Gotham
statsLabel.TextSize = 11
statsLabel.TextColor3 = primaryColor
statsLabel.TextXAlignment = Enum.TextXAlignment.Center
statsLabel.ZIndex = 3
statsLabel.Parent = statsFrame

-- Pulso en las stats cuando cambian
local function pulseStats()
    local pulseTween = TweenService:Create(statsLabel, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true), {
        TextSize = 13
    })
    pulseTween:Play()
end

-- Botón Free Priv
local freePrivButton = Instance.new("TextButton")
freePrivButton.Size = UDim2.new(1, -20, 0, 35)
freePrivButton.Position = UDim2.new(0, 10, 0, 142)
freePrivButton.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
freePrivButton.BorderSizePixel = 0
freePrivButton.Text = "Free Priv"
freePrivButton.Font = Enum.Font.GothamBold
freePrivButton.TextSize = 14
freePrivButton.TextColor3 = Color3.fromRGB(255, 255, 255)
freePrivButton.BackgroundTransparency = 1
freePrivButton.ZIndex = 2
freePrivButton.Parent = mainFrame

-- Fade in del botón Free Priv
TweenService:Create(freePrivButton, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0.65), {
    BackgroundTransparency = 0
}):Play()

local freePrivCorner = Instance.new("UICorner")
freePrivCorner.CornerRadius = UDim.new(0, 8)
freePrivCorner.Parent = freePrivButton

-- Hover effect para Free Priv
freePrivButton.MouseEnter:Connect(function()
    TweenService:Create(freePrivButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
        BackgroundColor3 = Color3.fromRGB(45, 45, 55),
        Size = UDim2.new(1, -18, 0, 37)
    }):Play()
end)

freePrivButton.MouseLeave:Connect(function()
    TweenService:Create(freePrivButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
        BackgroundColor3 = Color3.fromRGB(35, 35, 45),
        Size = UDim2.new(1, -20, 0, 35)
    }):Play()
end)

-- Frame del log
local logFrame = Instance.new("Frame")
logFrame.Size = UDim2.new(1, -20, 0, 75)
logFrame.Position = UDim2.new(0, 10, 0, 185)
logFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 28)
logFrame.BorderSizePixel = 0
logFrame.BackgroundTransparency = 1
logFrame.ZIndex = 2
logFrame.Parent = mainFrame

-- Fade in del log frame
TweenService:Create(logFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0.7), {
    BackgroundTransparency = 0
}):Play()

local logCorner = Instance.new("UICorner")
logCorner.CornerRadius = UDim.new(0, 8)
logCorner.Parent = logFrame

local logTitle = Instance.new("TextLabel")
logTitle.Size = UDim2.new(1, -10, 0, 18)
logTitle.Position = UDim2.new(0, 5, 0, 3)
logTitle.BackgroundTransparency = 1
logTitle.Text = "System Log:"
logTitle.Font = Enum.Font.GothamBold
logTitle.TextSize = 12
logTitle.TextColor3 = Color3.fromRGB(180, 180, 200)
logTitle.TextXAlignment = Enum.TextXAlignment.Left
logTitle.ZIndex = 3
logTitle.Parent = logFrame

local logLabel = Instance.new("TextLabel")
logLabel.Size = UDim2.new(1, -10, 1, -22)
logLabel.Position = UDim2.new(0, 5, 0, 20)
logLabel.BackgroundTransparency = 1
logLabel.Text = isPremium and "⚡ Premium Mode Ready\n• Fast search enabled\n• Priority access" or "🌟 FreeMium Mode Ready\n• Standard search\n• Stable connection"
logLabel.Font = Enum.Font.Code
logLabel.TextSize = 10
logLabel.TextColor3 = primaryColor
logLabel.TextXAlignment = Enum.TextXAlignment.Left
logLabel.TextYAlignment = Enum.TextYAlignment.Top
logLabel.TextWrapped = true
logLabel.ZIndex = 3
logLabel.Parent = logFrame

-- Función para actualizar el log con animación
local function updateLog(message)
    -- Fade out
    local fadeOut = TweenService:Create(logLabel, TweenInfo.new(0.15, Enum.EasingStyle.Quad), {
        TextTransparency = 1
    })
    fadeOut:Play()
    fadeOut.Completed:Wait()
    
    -- Cambiar texto
    logLabel.Text = message
    
    -- Fade in
    local fadeIn = TweenService:Create(logLabel, TweenInfo.new(0.15, Enum.EasingStyle.Quad), {
        TextTransparency = 0
    })
    fadeIn:Play()
end

-- Función para actualizar stats con animación
local function updateStats()
    statsLabel.Text = string.format("Attempts: %d | Speed: %s", 
        attemptCount, 
        isPremium and "⚡ Fast" or "Normal"
    )
    pulseStats()
end

-- Función para buscar servidor vacío (Free Priv)
local function findEmptyServer()
    updateLog("🔍 Searching empty server...\nFree Priv Mode")
    
    local success, result = pcall(function()
        local servers = HttpService:JSONDecode(game:HttpGet(
            "https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?sortOrder=Asc&limit=100"
        ))
        
        if servers and servers.data then
            -- Buscar servidor completamente vacío
            for _, server in pairs(servers.data) do
                if server.id ~= game.JobId and server.playing == 0 then
                    updateLog("✅ Empty server found!\nJobId: " .. server.id:sub(1, 8) .. "...\nConnecting...")
                    TeleportService:TeleportToPlaceInstance(placeId, server.id, player)
                    return true
                end
            end
            
            -- Si no hay servidor vacío, buscar el más vacío posible
            local bestServer = nil
            local minPlayers = 999
            
            for _, server in pairs(servers.data) do
                if server.id ~= game.JobId and server.playing < minPlayers and server.playing < server.maxPlayers then
                    bestServer = server
                    minPlayers = server.playing
                end
            end
            
            if bestServer then
                updateLog("⚠️ No empty servers\nBest option: " .. bestServer.playing .. " players\nConnecting...")
                TeleportService:TeleportToPlaceInstance(placeId, bestServer.id, player)
                return true
            else
                updateLog("❌ No available servers\nTry again later")
                return false
            end
        end
    end)
    
    if not success then
        updateLog("⚠️ Error searching servers\n" .. tostring(result):sub(1, 40))
    end
end

-- Función para hacer server hop (ORIGINAL)
local function serverHop()
    if not joinerActive then return end
    
    attemptCount = attemptCount + 1
    updateStats()
    updateLog("Searching servers...\nAttempt #" .. attemptCount .. (isPremium and " (Premium Speed)" or ""))
    
    local success, result = pcall(function()
        local servers = HttpService:JSONDecode(game:HttpGet(
            "https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?sortOrder=Asc&limit=100"
        ))
        
        if servers and servers.data then
            for _, server in pairs(servers.data) do
                if server.id ~= game.JobId and server.playing < server.maxPlayers then
                    updateLog("Attempt: JobId\n" .. server.id .. "\nPlayers: " .. server.playing .. "/" .. server.maxPlayers)
                    TeleportService:TeleportToPlaceInstance(placeId, server.id, player)
                    return
                end
            end
            updateLog("No servers found.\nRetrying..." .. (isPremium and "\n(Premium Speed)" or ""))
        end
    end)
    
    if not success then
        updateLog("Error: " .. tostring(result):sub(1, 50) .. "...")
        wait(1)
        if joinerActive then
            serverHop()
        end
    end
end

-- Evento del botón toggle con animación
toggleButton.MouseButton1Click:Connect(function()
    joinerActive = not joinerActive
    
    -- Animación de click
    local clickTween = TweenService:Create(toggleButton, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true), {
        Size = UDim2.new(0, 50, 0, 24)
    })
    clickTween:Play()
    
    if joinerActive then
        -- Animación de color a ON
        TweenService:Create(toggleButton, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
            BackgroundColor3 = isPremium and Color3.fromRGB(218, 165, 32) or Color3.fromRGB(80, 200, 80)
        }):Play()
        toggleButton.Text = "ON"
        attemptCount = 0
        updateStats()
        updateLog("Starting server hop...\n" .. (isPremium and "Premium Mode" or "FreeMium Mode"))
        
        -- Pulso en el frame cuando se activa
        local pulseTween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true), {
            Size = UDim2.new(0, 285, 0, 285)
        })
        pulseTween:Play()
        
        spawn(function()
            while joinerActive do
                serverHop()
                wait(searchDelay)
            end
        end)
    else
        -- Animación de color a OFF
        TweenService:Create(toggleButton, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
            BackgroundColor3 = Color3.fromRGB(200, 50, 50)
        }):Play()
        toggleButton.Text = "OFF"
        updateLog("Stopped.")
    end
end)

-- Evento del botón Free Priv
freePrivButton.MouseButton1Click:Connect(function()
    -- Animación de click
    local clickTween = TweenService:Create(freePrivButton, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true), {
        Size = UDim2.new(1, -25, 0, 32)
    })
    clickTween:Play()
    
    -- Animación de color
    local colorTween = TweenService:Create(freePrivButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
        BackgroundColor3 = primaryColor
    })
    colorTween:Play()
    
    wait(0.2)
    
    -- Volver al color original
    TweenService:Create(freePrivButton, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
        BackgroundColor3 = Color3.fromRGB(35, 35, 45)
    }):Play()
    
    -- Ejecutar búsqueda de servidor vacío
    findEmptyServer()
end)

-- Sistema de arrastre mejorado con animaciones
local dragging = false
local dragInput, dragStart, startPos

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        
        -- Animación al empezar a arrastrar
        TweenService:Create(mainFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            Size = UDim2.new(0, 275, 0, 275)
        }):Play()
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
                -- Animación al soltar
                TweenService:Create(mainFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
                    Size = UDim2.new(0, 280, 0, 280)
                }):Play()
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

-- Notificación inicial
print("✅ Isme Joiner v3.2 loaded successfully")
print("Edition:", isPremium and "Premium" or "FreeMium")
print("Player:", player.Name)
