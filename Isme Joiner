-- Isme Joiner - Auto Server Hop Script
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local placeId = game.PlaceId
local joinerEnabled = false

-- Lista de usuarios Premium
local premiumUsers = {
    "Usuario1",
    "Usuario2",
    "Usuario3",
    -- Agrega m√°s usuarios aqu√≠
}

-- Verificar si el jugador es premium
local function isPremium()
    for _, username in pairs(premiumUsers) do
        if player.Name == username then
            return true
        end
    end
    return false
end

local isPremiumUser = isPremium()

-- Crear GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "IsmeJoiner"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = player:WaitForChild("PlayerGui")

-- Frame principal
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 240, 0, 130)
MainFrame.Position = UDim2.new(0.5, -120, 0.5, -65)
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 28)
MainFrame.BorderSizePixel = 0
MainFrame.BackgroundTransparency = 1
MainFrame.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 14)
UICorner.Parent = MainFrame

-- Animaci√≥n de entrada
MainFrame.Position = UDim2.new(0.5, -120, 0.5, -100)
local introTween = TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
    BackgroundTransparency = 0,
    Position = UDim2.new(0.5, -120, 0.5, -65)
})
introTween:Play()

-- T√≠tulo con gradiente animado
local TitleLabel = Instance.new("TextLabel")
TitleLabel.Size = UDim2.new(1, 0, 0, 32)
TitleLabel.Position = UDim2.new(0, 0, 0, 12)
TitleLabel.BackgroundTransparency = 1
TitleLabel.Text = "Isme Joiner"
TitleLabel.TextSize = 22
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.TextTransparency = 1
TitleLabel.Parent = MainFrame

TweenService:Create(TitleLabel, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0.3), {
    TextTransparency = 0
}):Play()

local TitleGradient = Instance.new("UIGradient")
if isPremiumUser then
    TitleGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 215, 0)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 165, 0))
    }
else
    TitleGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(100, 255, 150)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 200, 100))
    }
end
TitleGradient.Parent = TitleLabel

-- Animar gradiente
spawn(function()
    while wait() do
        for i = 0, 360, 2 do
            TitleGradient.Rotation = i
            wait(0.03)
        end
    end
end)

-- Subt√≠tulo Edition
local EditionLabel = Instance.new("TextLabel")
EditionLabel.Size = UDim2.new(1, 0, 0, 16)
EditionLabel.Position = UDim2.new(0, 0, 0, 44)
EditionLabel.BackgroundTransparency = 1
EditionLabel.Text = isPremiumUser and "Edition: Premium" or "FreeMium"
EditionLabel.TextSize = 11
EditionLabel.Font = Enum.Font.Gotham
EditionLabel.TextColor3 = isPremiumUser and Color3.fromRGB(255, 215, 0) or Color3.fromRGB(120, 120, 130)
EditionLabel.TextTransparency = 1
EditionLabel.Parent = MainFrame

TweenService:Create(EditionLabel, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0.4), {
    TextTransparency = 0
}):Play()

-- Toggle Button
local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 200, 0, 40)
ToggleButton.Position = UDim2.new(0.5, -100, 0, 75)
ToggleButton.BackgroundColor3 = Color3.fromRGB(180, 40, 40)
ToggleButton.Text = "Joiner: OFF"
ToggleButton.TextColor3 = Color3.new(1, 1, 1)
ToggleButton.TextSize = 16
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.BorderSizePixel = 0
ToggleButton.BackgroundTransparency = 1
ToggleButton.TextTransparency = 1
ToggleButton.Parent = MainFrame

local ToggleCorner = Instance.new("UICorner")
ToggleCorner.CornerRadius = UDim.new(0, 10)
ToggleCorner.Parent = ToggleButton

TweenService:Create(ToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0.5), {
    BackgroundTransparency = 0,
    TextTransparency = 0
}):Play()

-- Sistema de notificaciones
local NotificationContainer = Instance.new("Frame")
NotificationContainer.Size = UDim2.new(0, 300, 1, 0)
NotificationContainer.Position = UDim2.new(1, -320, 0, 20)
NotificationContainer.BackgroundTransparency = 1
NotificationContainer.Parent = ScreenGui

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Padding = UDim.new(0, 10)
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Parent = NotificationContainer

local function createNotification(message, duration)
    local NotifFrame = Instance.new("Frame")
    NotifFrame.Size = UDim2.new(1, 0, 0, 70)
    NotifFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    NotifFrame.BorderSizePixel = 0
    NotifFrame.Position = UDim2.new(0, 300, 0, 0)
    NotifFrame.Parent = NotificationContainer
    
    local NotifCorner = Instance.new("UICorner")
    NotifCorner.CornerRadius = UDim.new(0, 10)
    NotifCorner.Parent = NotifFrame
    
    local NotifText = Instance.new("TextLabel")
    NotifText.Size = UDim2.new(1, -20, 0, 35)
    NotifText.Position = UDim2.new(0, 10, 0, 10)
    NotifText.BackgroundTransparency = 1
    NotifText.Text = message
    NotifText.TextSize = 14
    NotifText.Font = Enum.Font.Gotham
    NotifText.TextColor3 = Color3.new(1, 1, 1)
    NotifText.TextXAlignment = Enum.TextXAlignment.Left
    NotifText.Parent = NotifFrame
    
    -- Contenedor de la barra de progreso
    local ProgressBG = Instance.new("Frame")
    ProgressBG.Size = UDim2.new(1, -20, 0, 4)
    ProgressBG.Position = UDim2.new(0, 10, 1, -14)
    ProgressBG.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
    ProgressBG.BorderSizePixel = 0
    ProgressBG.Parent = NotifFrame
    
    local ProgressCorner = Instance.new("UICorner")
    ProgressCorner.CornerRadius = UDim.new(1, 0)
    ProgressCorner.Parent = ProgressBG
    
    -- Barra de progreso
    local ProgressBar = Instance.new("Frame")
    ProgressBar.Size = UDim2.new(1, 0, 1, 0)
    ProgressBar.BackgroundColor3 = isPremiumUser and Color3.fromRGB(255, 200, 0) or Color3.fromRGB(80, 220, 120)
    ProgressBar.BorderSizePixel = 0
    ProgressBar.Parent = ProgressBG
    
    local BarCorner = Instance.new("UICorner")
    BarCorner.CornerRadius = UDim.new(1, 0)
    BarCorner.Parent = ProgressBar
    
    -- Animaci√≥n de entrada
    TweenService:Create(NotifFrame, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Position = UDim2.new(0, 0, 0, 0)
    }):Play()
    
    -- Animaci√≥n de la barra
    local progressTween = TweenService:Create(ProgressBar, TweenInfo.new(duration, Enum.EasingStyle.Linear), {
        Size = UDim2.new(0, 0, 1, 0)
    })
    progressTween:Play()
    
    -- Eliminar notificaci√≥n
    task.delay(duration, function()
        local exitTween = TweenService:Create(NotifFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
            Position = UDim2.new(0, 300, 0, 0)
        })
        exitTween:Play()
        exitTween.Completed:Wait()
        NotifFrame:Destroy()
    end)
end

-- Funci√≥n para buscar servidor
local function serverHop()
    if not joinerEnabled then return end
    
    createNotification("üîç Buscando servidor...", 3)
    
    local success, result = pcall(function()
        local servers = HttpService:JSONDecode(game:HttpGet(
            "https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?sortOrder=Asc&limit=100"
        ))
        
        if servers and servers.data then
            for _, server in pairs(servers.data) do
                if server.id ~= game.JobId and server.playing < server.maxPlayers then
                    createNotification("‚úÖ Servidor encontrado! Conectando...", 2)
                    TeleportService:TeleportToPlaceInstance(placeId, server.id, player)
                    return
                end
            end
        end
    end)
    
    if not success then
        createNotification("‚ö†Ô∏è Error. Reintentando...", 4)
        wait(5)
        if joinerEnabled then
            serverHop()
        end
    end
end

-- Toggle functionality
ToggleButton.MouseButton1Click:Connect(function()
    joinerEnabled = not joinerEnabled
    
    -- Animaci√≥n del bot√≥n
    local scaleTween = TweenService:Create(ToggleButton, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        Size = UDim2.new(0, 190, 0, 38)
    })
    scaleTween:Play()
    scaleTween.Completed:Wait()
    
    TweenService:Create(ToggleButton, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        Size = UDim2.new(0, 200, 0, 40)
    }):Play()
    
    if joinerEnabled then
        TweenService:Create(ToggleButton, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
            BackgroundColor3 = Color3.fromRGB(50, 200, 80)
        }):Play()
        ToggleButton.Text = "Joiner: ON"
        createNotification("üöÄ Joiner activado", 2)
        serverHop()
    else
        TweenService:Create(ToggleButton, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
            BackgroundColor3 = Color3.fromRGB(180, 40, 40)
        }):Play()
        ToggleButton.Text = "Joiner: OFF"
        createNotification("üõë Joiner desactivado", 2)
    end
end)

-- Hacer draggable
local dragging, dragInput, dragStart, startPos

MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        TweenService:Create(MainFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            Size = UDim2.new(0, 235, 0, 128)
        }):Play()
    end
end)

MainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

MainFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
        TweenService:Create(MainFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            Size = UDim2.new(0, 240, 0, 130)
        }):Play()
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

-- Notificaci√≥n de bienvenida
wait(0.6)
if isPremiumUser then
    createNotification("üëë Welcome, Premium User!", 3)
else
    createNotification("üëã Welcome, to Isme Joiner", 3)
end
