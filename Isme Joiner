-- Isme Joiner Script
-- Creado con interfaz minimalista y sistema de ediciones

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer

-- Lista de usuarios Premium
local PremiumUsers = {
    "zWEKITO",
    -- Agrega más nombres de usuario aquí
}

-- Verificar si el usuario es Premium
local function isPremium()
    for _, username in ipairs(PremiumUsers) do
        if LocalPlayer.Name == username then
            return true
        end
    end
    return false
end

local Edition = isPremium() and "Premium" or "FreeMium"
local EditionColor = isPremium() and Color3.fromRGB(147, 51, 234) or Color3.fromRGB(34, 197, 94)
local AccentColor = isPremium() and Color3.fromRGB(168, 85, 247) or Color3.fromRGB(74, 222, 128)

-- Variables de estado
local JoinerActive = false
local ServerHopping = false

-- Crear ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "IsmeJoiner"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Frame Principal
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 320, 0, 240)
MainFrame.Position = UDim2.new(0.5, -160, 0.5, -120)
MainFrame.BackgroundColor3 = Color3.fromRGB(17, 17, 27)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 16)
MainCorner.Parent = MainFrame

local MainStroke = Instance.new("UIStroke")
MainStroke.Color = EditionColor
MainStroke.Thickness = 2
MainStroke.Transparency = 0.5
MainStroke.Parent = MainFrame

-- Animación del borde principal
local function animateBorderGlow(stroke)
    local tween1 = TweenService:Create(stroke, TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), {
        Transparency = 0
    })
    tween1:Play()
end

animateBorderGlow(MainStroke)

-- Título
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, -40, 0, 50)
Title.Position = UDim2.new(0, 20, 0, 15)
Title.BackgroundTransparency = 1
Title.Text = "Isme Joiner"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 28
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Parent = MainFrame

local TitleStroke = Instance.new("UIStroke")
TitleStroke.Color = AccentColor
TitleStroke.Thickness = 1.5
TitleStroke.Transparency = 0.3
TitleStroke.Parent = Title

-- Animación del título
animateBorderGlow(TitleStroke)

-- Toggle Frame
local ToggleFrame = Instance.new("Frame")
ToggleFrame.Name = "ToggleFrame"
ToggleFrame.Size = UDim2.new(0, 140, 0, 50)
ToggleFrame.Position = UDim2.new(0.5, -70, 0, 80)
ToggleFrame.BackgroundColor3 = Color3.fromRGB(220, 38, 38)
ToggleFrame.BorderSizePixel = 0
ToggleFrame.Parent = MainFrame

local ToggleCorner = Instance.new("UICorner")
ToggleCorner.CornerRadius = UDim.new(0, 25)
ToggleCorner.Parent = ToggleFrame

local ToggleStroke = Instance.new("UIStroke")
ToggleStroke.Color = Color3.fromRGB(185, 28, 28)
ToggleStroke.Thickness = 2
ToggleStroke.Parent = ToggleFrame

-- Toggle Button
local ToggleButton = Instance.new("TextButton")
ToggleButton.Name = "ToggleButton"
ToggleButton.Size = UDim2.new(1, 0, 1, 0)
ToggleButton.BackgroundTransparency = 1
ToggleButton.Text = "OFF"
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 20
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Parent = ToggleFrame

-- Texto de Edición
local EditionLabel = Instance.new("TextLabel")
EditionLabel.Name = "EditionLabel"
EditionLabel.Size = UDim2.new(1, -40, 0, 40)
EditionLabel.Position = UDim2.new(0, 20, 1, -55)
EditionLabel.BackgroundTransparency = 1
EditionLabel.Text = "Edition: " .. Edition
EditionLabel.Font = Enum.Font.GothamBold
EditionLabel.TextSize = 16
EditionLabel.TextColor3 = EditionColor
EditionLabel.Parent = MainFrame

local EditionGradient = Instance.new("UIGradient")
EditionGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, EditionColor),
    ColorSequenceKeypoint.new(1, AccentColor)
}
EditionGradient.Rotation = 45
EditionGradient.Parent = EditionLabel

-- Sistema de Notificaciones
local NotificationContainer = Instance.new("Frame")
NotificationContainer.Name = "NotificationContainer"
NotificationContainer.Size = UDim2.new(0, 350, 1, 0)
NotificationContainer.Position = UDim2.new(1, -370, 0, 20)
NotificationContainer.BackgroundTransparency = 1
NotificationContainer.Parent = ScreenGui

local NotificationLayout = Instance.new("UIListLayout")
NotificationLayout.Padding = UDim.new(0, 10)
NotificationLayout.SortOrder = Enum.SortOrder.LayoutOrder
NotificationLayout.Parent = NotificationContainer

local function createNotification(title, message, duration)
    local Notification = Instance.new("Frame")
    Notification.Name = "Notification"
    Notification.Size = UDim2.new(1, 0, 0, 0)
    Notification.BackgroundColor3 = Color3.fromRGB(23, 23, 37)
    Notification.BorderSizePixel = 0
    Notification.ClipsDescendants = true
    Notification.Parent = NotificationContainer
    
    local NotifCorner = Instance.new("UICorner")
    NotifCorner.CornerRadius = UDim.new(0, 12)
    NotifCorner.Parent = Notification
    
    local NotifStroke = Instance.new("UIStroke")
    NotifStroke.Color = EditionColor
    NotifStroke.Thickness = 1.5
    NotifStroke.Transparency = 0.5
    NotifStroke.Parent = Notification
    
    local NotifTitle = Instance.new("TextLabel")
    NotifTitle.Name = "Title"
    NotifTitle.Size = UDim2.new(1, -20, 0, 25)
    NotifTitle.Position = UDim2.new(0, 10, 0, 8)
    NotifTitle.BackgroundTransparency = 1
    NotifTitle.Text = title
    NotifTitle.Font = Enum.Font.GothamBold
    NotifTitle.TextSize = 16
    NotifTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    NotifTitle.TextXAlignment = Enum.TextXAlignment.Left
    NotifTitle.Parent = Notification
    
    local NotifMessage = Instance.new("TextLabel")
    NotifMessage.Name = "Message"
    NotifMessage.Size = UDim2.new(1, -20, 0, 20)
    NotifMessage.Position = UDim2.new(0, 10, 0, 33)
    NotifMessage.BackgroundTransparency = 1
    NotifMessage.Text = message
    NotifMessage.Font = Enum.Font.Gotham
    NotifMessage.TextSize = 13
    NotifMessage.TextColor3 = Color3.fromRGB(180, 180, 180)
    NotifMessage.TextXAlignment = Enum.TextXAlignment.Left
    NotifMessage.TextWrapped = true
    NotifMessage.Parent = Notification
    
    -- Barra de progreso
    local ProgressBar = Instance.new("Frame")
    ProgressBar.Name = "ProgressBar"
    ProgressBar.Size = UDim2.new(1, 0, 0, 3)
    ProgressBar.Position = UDim2.new(0, 0, 1, -3)
    ProgressBar.BackgroundColor3 = EditionColor
    ProgressBar.BorderSizePixel = 0
    ProgressBar.Parent = Notification
    
    -- Animación de entrada
    local targetHeight = 70
    local openTween = TweenService:Create(Notification, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Size = UDim2.new(1, 0, 0, targetHeight)
    })
    openTween:Play()
    
    -- Animación de la barra de progreso
    local progressTween = TweenService:Create(ProgressBar, TweenInfo.new(duration, Enum.EasingStyle.Linear), {
        Size = UDim2.new(0, 0, 0, 3)
    })
    
    openTween.Completed:Connect(function()
        progressTween:Play()
    end)
    
    -- Eliminar después de la duración
    task.delay(duration, function()
        local closeTween = TweenService:Create(Notification, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
            Size = UDim2.new(1, 0, 0, 0)
        })
        closeTween:Play()
        closeTween.Completed:Connect(function()
            Notification:Destroy()
        end)
    end)
end

-- Función de Server Hopping
local function serverHop()
    if ServerHopping then return end
    ServerHopping = true
    
    createNotification("Isme Joiner", "Buscando servidor disponible...", 3)
    
    local success, result = pcall(function()
        local servers = {}
        local cursor = ""
        
        repeat
            local url = string.format(
                "https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100&cursor=%s",
                game.PlaceId,
                cursor
            )
            
            local response = game:HttpGet(url)
            local data = HttpService:JSONDecode(response)
            
            if data.data then
                for _, server in ipairs(data.data) do
                    if server.playing < server.maxPlayers and server.id ~= game.JobId then
                        table.insert(servers, server.id)
                    end
                end
            end
            
            cursor = data.nextPageCursor or ""
        until cursor == "" or #servers >= 10
        
        if #servers > 0 then
            local randomServer = servers[math.random(1, #servers)]
            createNotification("Isme Joiner", "Servidor encontrado! Teleportando...", 2)
            
            task.wait(1)
            TeleportService:TeleportToPlaceInstance(game.PlaceId, randomServer, LocalPlayer)
        else
            createNotification("Isme Joiner", "No se encontraron servidores disponibles", 3)
            ServerHopping = false
        end
    end)
    
    if not success then
        createNotification("Error", "No se pudo conectar al servidor", 3)
        ServerHopping = false
    end
end

-- Loop del Joiner
local function joinerLoop()
    while JoinerActive do
        serverHop()
        task.wait(5)
    end
end

-- Toggle Button Click
ToggleButton.MouseButton1Click:Connect(function()
    JoinerActive = not JoinerActive
    
    local targetColor = JoinerActive and Color3.fromRGB(34, 197, 94) or Color3.fromRGB(220, 38, 38)
    local targetStrokeColor = JoinerActive and Color3.fromRGB(22, 163, 74) or Color3.fromRGB(185, 28, 28)
    
    local colorTween = TweenService:Create(ToggleFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
        BackgroundColor3 = targetColor
    })
    
    local strokeTween = TweenService:Create(ToggleStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
        Color = targetStrokeColor
    })
    
    colorTween:Play()
    strokeTween:Play()
    
    ToggleButton.Text = JoinerActive and "ON" or "OFF"
    
    -- Animación de escala al hacer clic
    local scaleDown = TweenService:Create(ToggleFrame, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        Size = UDim2.new(0, 130, 0, 45)
    })
    local scaleUp = TweenService:Create(ToggleFrame, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        Size = UDim2.new(0, 140, 0, 50)
    })
    
    scaleDown:Play()
    scaleDown.Completed:Connect(function()
        scaleUp:Play()
    end)
    
    if JoinerActive then
        createNotification("Isme Joiner", "Joiner activado - " .. Edition, 3)
        task.spawn(joinerLoop)
    else
        createNotification("Isme Joiner", "Joiner desactivado", 3)
        ServerHopping = false
    end
end)

-- Hover effect
ToggleButton.MouseEnter:Connect(function()
    local hoverTween = TweenService:Create(ToggleFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
        Size = UDim2.new(0, 145, 0, 52)
    })
    hoverTween:Play()
end)

ToggleButton.MouseLeave:Connect(function()
    local leaveTween = TweenService:Create(ToggleFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
        Size = UDim2.new(0, 140, 0, 50)
    })
    leaveTween:Play()
end)

-- Hacer el frame draggable
local dragging, dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    local targetPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    
    local moveTween = TweenService:Create(MainFrame, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {
        Position = targetPos
    })
    moveTween:Play()
end

MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

MainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Animación de entrada inicial
MainFrame.Size = UDim2.new(0, 0, 0, 0)
local introTween = TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
    Size = UDim2.new(0, 320, 0, 240)
})
introTween:Play()

-- Notificación de bienvenida
task.wait(0.6)
createNotification("Isme Joiner", "Bienvenido! Edition: " .. Edition, 4)
